name: "Release Tag"
description: "tag a release"
inputs:
  version:
    required: true
  branch:
    required: true
  bypass_token:
    required: false
outputs:
  version: # id of output
    description: "Version number output"
    value: ${{ steps.release-version.outputs.version }}
runs:
  using: "composite"
  steps:
    - run: |
        echo "Releasing a '${{ inputs.version }}' version"
        if ! [[ "${{ inputs.version }}" =~ ^major|minor|patch$ ]]; 
        then
          echo "version needs to be: major OR minor OR patch";
          exit 1;
        fi
      shell: bash
    - id: modify-branch-name
      run: |
        echo "renaming branch '${{ inputs.branch }}' for version preid"
        BRANCH=${{ inputs.branch }}
        MODIFIED_BRANCH=${BRANCH//\//-}
        echo "branch=$(echo $MODIFIED_BRANCH)" >> $GITHUB_OUTPUT
      shell: bash
    - id: release-version
      run: |
        if [ "${{ inputs.branch }}" != "develop" ]; then
          yarn version --pre${{ inputs.version }} --preid ${{ steps.modify-branch-name.outputs.branch }} 
        else
          yarn version --${{ inputs.version }}
        fi
        VERSION=v`node -pe "require('./package.json').version"`
        echo "version=$(echo $VERSION)" >> $GITHUB_OUTPUT
        if [[ "${{ inputs.bypass_token }}" == "" ]];
        then
          echo "Using Github Token"
          echo ${{ github.token }} | gh auth login --with-token
        else
          echo "Using Bypass Token"
          git remote set-url origin https://x-access-token:${{ inputs.bypass_token }}@github.com/${{ github.repository }}
          echo ${{ inputs.bypass_token }} | gh auth login --with-token
        fi        
        git add .
        git commit -m "${{ inputs.version }} update - $VERSION" || true
        git push
        git push origin $VERSION
        
        gh release create $VERSION
      shell: bash
