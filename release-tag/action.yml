name: "Release Tag"
description: "tag a release"
inputs:
  version:
    required: true
  branch:
    required: true
outputs:
  version: # id of output
    description: "Version number output"
    value: ${{ steps.release-version.outputs.version }}
runs:
  using: "composite"
  steps:
    - run: |
        echo "Releasing a '${{ inputs.version }}' version"
        if ! [[ "${{ inputs.version }}" =~ ^major|minor|patch$ ]]; 
        then
          echo "version needs to be: major OR minor OR patch";
          exit 1;
        fi
      shell: bash
    - run: |
        echo "thebranch is '${{ inputs.branch }}' blah"
        modified_branch=${{ inputs.branch//\//- }}
        echo "::set-env name=MODIFIED_BRANCH::$modified_branch"
        id: modify_branch
      shell: bash
    - id: release-version
      run: |
        if [ "${{ inputs.branch }}" != "develop" ]; then
          yarn version --pre${{ inputs.version }} --preid ${{ steps.modify_branch.outputs.MODIFIED_BRANCH }} 
        else
          yarn version --${{ inputs.version }}
        fi
        VERSION=v`node -pe "require('./package.json').version"`
        echo "version=$(echo $VERSION)" >> $GITHUB_OUTPUT
        git add .
        git commit -m "${{ inputs.version }} update - $VERSION" || true
        git push
        git push origin $VERSION
        echo ${{ github.token }} | gh auth login --with-token
        gh release create $VERSION
      shell: bash
