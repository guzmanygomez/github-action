name: Create Release for Menu Development
run-name: Release "${{ inputs.tag_version }}" version by @${{ github.actor }} from ref="${{ github.ref_name }}" for Menu Development

permissions: write-all

on:
  workflow_dispatch:
    inputs:
      tag_version:
        description: "Version number type to release (patch|minor|major)"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch
      target:
        description: "Select target(s) to run: australia, usa, or both"
        required: true
        default: "both"
        type: choice
        options:
          - australia
          - usa
          - both
  workflow_call:
    inputs:
      tag_version:
        description: "Version number type to release (patch|minor|major)"
        required: true
        type: string
      target:
        description: "Select target(s) to run: australia, usa, or both"
        required: true
        type: string
    outputs:
      version:
        description: "Version of the release"
        value: ${{ jobs.Tag-Feature.outputs.version  }}

jobs:
  Tag-Feature:
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      version: ${{ steps.tag-release.outputs.version }}
    steps:
      - name: Pin Node to 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BYPASS_TOKEN }}

      - name: Set up git name and email
        uses: guzmanygomez/github-actions/setup-git-name-and-email@main

      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
        id: extract_branch

      - id: tag-release
        name: Tag release
        uses: guzmanygomez/github-actions/release-tag@main
        with:
          version: ${{ inputs.tag_version }}
          branch: ${{ steps.extract_branch.outputs.branch }}

  Dynamic-Matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set dynamic matrix
        id: set-matrix
        run: |
          if [[ "${{ inputs.target }}" == "australia" ]]; then
            echo '{"include":[{"prefix":"au","database_schema":"gyg_au"}]}' > matrix.json
          elif [[ "${{ inputs.target }}" == "usa" ]]; then
            echo '{"include":[{"prefix":"us","database_schema":"gyg_us"}]}' > matrix.json
          elif [[ "${{ inputs.target }}" == "both" ]]; then
            echo '{"include":[{"prefix":"au","database_schema":"gyg_au"},{"prefix":"us","database_schema":"gyg_us"}]}' > matrix.json
          fi
          echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT

  Release-Feature:
    needs: [Tag-Feature, Dynamic-Matrix]
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.Dynamic-Matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Pin Node to 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ROLE_APPS_TEST }}
          role-session-name: github-action
          aws-region: "ap-southeast-1"

      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Set up AWS CodeArtifact
        uses: guzmanygomez/github-actions/code-artifact@main
        env:
          AWS_REGION: "ap-southeast-2"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Extract part of the repository name
        id: extract_repo_name
        shell: bash
        run: echo "repo_name=$(echo ${GITHUB_REPOSITORY#guzmanygomez/bhyve-feature-})" >> $GITHUB_OUTPUT

      - name: Install AWS CDK globally
        run: yarn global add aws-cdk@2.157.0

      - name: Install Node Modules
        run: yarn install --production

      - name: Set up AWS Test
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ROLE_APPS_TEST }}
          role-session-name: github-action
          aws-region: "ap-southeast-1"

      - name: Build release package
        uses: guzmanygomez/github-actions/release-package@main
        with:
          gyg_env: test
          gyg_region: singapore
          version: ${{ needs.Tag-Feature.outputs.version }}
        env:
          USE_GLOBAL_CDK: true
          BHYVE_DEVELOPER_NAME: ${{ matrix.prefix }}
          PREFIX_REGION: ${{ matrix.prefix }}-${{ steps.extract_repo_name.outputs.repo_name }}
          DB_DATABASE: ${{ matrix.database_schema }}

  Release-Status:
    needs: [Tag-Feature, Release-Feature]
    runs-on: ubuntu-latest
    continue-on-error: true
    if: failure()
    env:
      ARTIFACT_VERSION: ${{ needs.Tag-Feature.outputs.version }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
        id: extract_branch

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Set Release Title Failure
        run: |
          echo "Setting git tag to $ARTIFACT_VERSION-broken"
          echo ${{ github.token }} | gh auth login --with-token
          gh release edit $ARTIFACT_VERSION --title $ARTIFACT_VERSION-broken
        shell: bash

      - name: Slack Notification
        uses: rtcamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: menu-management-github-actions
          SLACK_COLOR: failure
          SLACK_TITLE: "SG Menu Management Release"
          SLACK_MESSAGE: "Release for ${{ github.event.repository.name }} failed."
          SLACK_USERNAME: Github
          SLACK_WEBHOOK: ${{ vars.GYG_MENU_MANAGEMENT_SLACK_WEBHOOK }}
